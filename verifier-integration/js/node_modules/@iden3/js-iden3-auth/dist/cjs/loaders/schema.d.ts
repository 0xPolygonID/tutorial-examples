import { Schema } from '../protocol/models';
export interface SchemaLoadResult {
    schema: Uint8Array;
    extension: string;
}
export interface ISchemaLoader {
    load(schema: Schema): Promise<SchemaLoadResult>;
}
export declare class UniversalSchemaLoader implements ISchemaLoader {
    private ipfsUrl;
    constructor(ipfsUrl: string);
    load(schema: Schema): Promise<SchemaLoadResult>;
}
export declare class HttpSchemaLoader implements ISchemaLoader {
    load(schema: Schema): Promise<SchemaLoadResult>;
}
export declare class IpfsSchemaLoader implements ISchemaLoader {
    private readonly url;
    private readonly client;
    constructor(url: string);
    load(schema: Schema): Promise<SchemaLoadResult>;
}
export declare function getLoader(url: string, ipfsConfigUrl?: string): ISchemaLoader;
