import { ISchemaLoader } from '../loaders/schema';
import { IStateResolver } from '../state/resolver';
import { Query } from './query';
export interface PubSignalsVerifier {
    verifyQuery(query: Query, schemaLoader: ISchemaLoader): Promise<void>;
    verifyStates(resolver: IStateResolver): Promise<void>;
    verifyIdOwnership(sender: string, challenge: bigint): Promise<void>;
}
export interface PubSignals {
    new (pubSignals: string[]): PubSignalsVerifier;
}
export declare type VerifierType = PubSignalsVerifier & PubSignals;
export declare class Circuits {
    static getCircuitPubSignals(id: string): VerifierType;
    static registerCircuitPubSignals(id: string, circuit: VerifierType): void;
}
