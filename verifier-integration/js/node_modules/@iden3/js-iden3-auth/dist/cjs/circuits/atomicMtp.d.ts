import { Id } from '../core/id';
import { ISchemaLoader } from '../loaders/schema';
import { IStateResolver } from '../state/resolver';
import { Query } from './query';
import { PubSignalsVerifier } from './registry';
import { IDOwnershipPubSignals } from './ownershipVerifier';
export declare class AtomicQueryMTPPubSignals extends IDOwnershipPubSignals implements PubSignalsVerifier {
    userState: bigint;
    claimSchema: bigint;
    issuerClaimIdenState: bigint;
    issuerClaimNonRevState: bigint;
    issuerId: Id;
    slotIndex: number;
    values: bigint[];
    operator: number;
    timestamp: number;
    constructor(pubSignals: string[]);
    verifyQuery(query: Query, schemaLoader: ISchemaLoader): Promise<void>;
    verifyStates(resolver: IStateResolver): Promise<void>;
}
