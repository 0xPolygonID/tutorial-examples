"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.prepare = exports.getAlgorithms = exports.getProvingMethod = exports.registerProvingMethod = void 0;
const provingMethods = new Map(); // map[string]func() ProvingMethod{}
// RegisterProvingMethod registers the "alg" name and a factory function for proving method.
// This is typically done during init() in the method's implementation
function registerProvingMethod(alg, f) {
    return new Promise((res) => {
        provingMethods.set(alg, f);
        res();
    });
}
exports.registerProvingMethod = registerProvingMethod;
// GetProvingMethod retrieves a proving method from an "alg" string
function getProvingMethod(alg) {
    return new Promise((res, rej) => {
        const func = provingMethods.get(alg);
        if (func) {
            const method = func();
            res(method);
        }
        else {
            rej('unknown alg');
        }
    });
}
exports.getProvingMethod = getProvingMethod;
function getAlgorithms() {
    return Promise.resolve(Array.from(provingMethods.keys()));
}
exports.getAlgorithms = getAlgorithms;
// Prepare function is responsible to call provided handler for inputs preparation
function prepare(f, hash, circuitId) {
    return f(hash, circuitId);
}
exports.prepare = prepare;
//# sourceMappingURL=proving.js.map